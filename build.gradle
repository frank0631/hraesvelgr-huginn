buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1")
        classpath("org.ajoberstar:grgit:2.3.0")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "org.ajoberstar.grgit"

def _archivaURL = hasProperty('archivaURL') ? archivaURL : System.getenv('archivaURL')
def _archivaUser = hasProperty('archivaUser') ? archivaUser : System.getenv('archivaUser')
def _archivaPassword = hasProperty('archivaPassword') ? archivaPassword : System.getenv('archivaPassword')

repositories {
    mavenCentral()
    maven {
        url _archivaURL 
        credentials {
            username = _archivaUser
            password = _archivaPassword
        }
    }
}

bootJar {
    baseName = 'huginn'
    version =  '0.1.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'com.frank0631:nidhogg:1.0'
    compile 'org.apache.thrift:libthrift:0.11.0'
    compile 'commons-lang:commons-lang:2.6'
    compile 'org.apache.commons:commons-collections4:4.0'
    
    compile("org.springframework.boot:spring-boot-starter-web:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-data-rest:2.0.3.RELEASE")
    compile("org.hibernate:hibernate-core:5.3.2.Final")
    compile("org.hibernate:hibernate-entitymanager:5.3.2.Final")
    compile("com.h2database:h2:1.4.197")
    //compile 'mysql:mysql-connector-java'
    
    testCompile("junit:junit")
}


project.ext.dockerName = "latest"
project.ext.dockerNameVersion = "latest_tag"

task getBranchName() << {
	
	def travis_branch = System.getenv('TRAVIS_BRANCH')
	def git_branch = grgit.branch.current().name
        
    if (travis_branch?.trim()) {
    	if (travis_branch=="master"){
    		project.ext.set("dockerName", "latest")
    		project.ext.set("dockerNameVersion", bootJar.version)
    	}else{
    		project.ext.set("dockerName", travis_branch)
    		project.ext.set("dockerNameVersion", travis_branch+"_"+bootJar.version)
    	}
	}else{
		if (git_branch=="master"){
    		project.ext.set("dockerName", "latest")
    		project.ext.set("dockerNameVersion", bootJar.version)
    	}else{
    		project.ext.set("dockerName", git_branch)
    		project.ext.set("dockerNameVersion", git_branch+"_"+bootJar.version)
    	}
	}
	
	println project.dockerName
	println project.dockerNameVersion      
}

apply plugin: 'com.palantir.docker'
group = 'frank0631'

docker {
    dependsOn build, getBranchName
    name "${project.group}/${bootJar.baseName}"
    tags "${project.dockerName}", "${project.dockerNameVersion}"
    dockerfile file('Dockerfile')
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

